#include <stdio.h>
int sepnum(int *arr, int n){
        int temp,neg=0,pos= n-1;
        while(pos> neg)	
	{
         	while(arr[neg] <= 0)
         	neg++;
        	while(array[pos] > 0)
         	pos--;
     		if(neg < pos)
		{
                 	temp = arr[neg];
            		arr[neg] = arr[pos];
            		arr[pos] = temp;
		}
        }
 return neg;
}
 
int findMissing(int *arr, int n) 
{
	int i;
	for(i = 0; i < n; i++) 
	{
        	if(abs(arr[i])-1 <n && arr[abs(arr[i])-1] > 0)
      		{
          		arr[abs(arr[i])-1] =  -1 * arr[abs(arr[i])-1];
      		}
  	for(i = 0; i <n; i++) 
  	{
    	if (arr[i] > 0) 
    		{
     			return i+1;
    		}
  	}
        return n+1;
}
 
int getMissingPosNumber(int *arr, int n) 
{
       	 int count = seperateNumbers(arr,n);
    	 printf("%d\n", findSmallestPositiveMissing(arr+count, n-count));
}
 
int main()
{	
	int i,n;
	scanf("%d",&n);
	int arr[n];
	for(i=0;i<n;i++)
	{
		scanf("%d",&arr[i]);
	}     
        getMissingPosNumber(arr,n);
        return 0;
}